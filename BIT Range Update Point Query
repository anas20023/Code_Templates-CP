const int MAX = 2e5+10;
ll a[MAX], n, q, tree[MAX];
 
void update(int i, int v){
	while(i <= n){
		tree[i] += v;
		i += i & (-i);
	}
}
 
ll sum(int i){
	ll res = 0;
	while(i){
		res += tree[i];
		i -= i & (-i);
	}
	return res;
}
 
void solve(){
 
	cin >> n >> q;
 
	for(int i = 1; i <= n; i++){
		cin >> a[i];
	}
 
	while(q--){
		int t;
		cin >> t;
		if(t == 1){
			int l, r, v;
			cin >> l >> r >> v;
			update(l,v);
			update(r+1,-v);
		}
		else{
			int i;
			cin >> i;
			cout << a[i] + sum(i) << nn;
		}
	}
}
